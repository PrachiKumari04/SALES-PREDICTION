# -*- coding: utf-8 -*-
"""SALES PREDICTION

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I41Yfsz-tgCnJGH0KL5g0VTTGfyZhSvM
"""



""" Import necessary libraries and load the data"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Load the data
data = pd.read_csv('/content/drive/MyDrive/advertising.csv')

# Display the first few rows of the dataset
print(data.head())

"""Explore the data

"""

# Get a summary of the dataset
print(data.info())

# Check for missing values
print(data.isnull().sum())

# Summary statistics
print(data.describe())

# Visualize the relationships between features and sales
sns.pairplot(data, x_vars=['TV', 'Radio', 'Newspaper'], y_vars='Sales', height=4, aspect=1, kind='scatter')
plt.show()

# Correlation matrix
sns.heatmap(data.corr(), annot=True, cmap='coolwarm')
plt.show()

"""Data Preprocessing"""

# In this dataset, there are no categorical variables to encode or missing values to handle
# Split the data into features (X) and target (y)
X = data[['TV', 'Radio', 'Newspaper']]
y = data['Sales']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""Model Building"""

# Initialize the Linear Regression model
model = LinearRegression()

"""Model Training"""

# Train the model
model.fit(X_train, y_train)

"""Model Evaluation"""

# Make predictions on the test set
y_pred = model.predict(X_test)

# Calculate evaluation metrics
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)

print(f'Mean Absolute Error (MAE): {mae}')
print(f'Mean Squared Error (MSE): {mse}')
print(f'Root Mean Squared Error (RMSE): {rmse}')
print(f'R-squared (R2 ): {r2}')

"""Prediction"""

# Example prediction with new data
new_data = [[150, 30, 20]]  # Replace with actual values for TV, Radio, Newspaper
predicted_sales = model.predict(new_data)
print(f'Predicted Sales: {predicted_sales[0]}')